@using ClubMembership.Models;
@model ClubMembership.Models.EmployeeList
@{
    ViewBag.Title = "Employee Mapping"; ;
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<style>
</style>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="Cleardetail()">&times;</button>
    <h4 class="modal-title">Employee Mapping Details</h4>

</div>

<form method="post" action="@Url.Action("SForm_Savedata","EmployeeMaster")" id="schedulefrm">


    <div class="clearfix">

        <div class="msg" hidden style="margin-left:0;margin-right:0"> </div>
        <div class="msg_error" hidden style="margin-left:0;margin-right:0"> </div>


        <div class="col-lg-12">

            <div class="col-lg-2">
                <div class="form-group">
                    <label>Code No.</label>
                    <input class="form-control CATECODE" id="CATECODE" name="CATECODE" readonly value="@ViewBag.CATECODE">
                    <input class="form-control  CATEID hide" id="CATEID" name="CATEID" value="@ViewBag.id" readonly>

                </div>
            </div>

            <div class="col-lg-4">
                <div class="form-group">
                    <label>Name</label>
                    <input class="form-control CATENAME" id="CATENAME" name="CATENAME" value="@ViewBag.CATENAME" readonly>
                </div>
            </div>


            <div class="col-lg-4">
                <div class="form-group">
                    <label>Designation</label>
                    <input class="form-control CATEDGSNDESC" id="CATEDGSNDESC" name="CATEDGSNDESC" value="@ViewBag.CATEDGSNDESC" readonly>

                </div>
            </div>


        </div>

        <div class="clearfix">

            <div class="col-lg-12 ">
                <div class="panel-body">
                    <div class="table-responsive" id="job_list_inner">

                        <input type="text" id="SUB_TDETAIL_IDX" value="0" name="SUB_TDETAIL_IDX[]" class="SUB_TDETAIL_IDX" style="display:none" />
                        <table class='table table-striped table-bordered bootstrap-datatable' id="SUB_TDETAIL">
                            <thead><tr><th>Employee Name</th><th> <a class="btn btn-success btn-sm " href="#" id="sub_add_detail"><i class="fa fa-plus-square "></i>  </a></th></tr> </thead>
                            <tbody class="SUB_TDETAIL_BODY" id="SUB_TDETAIL_BODY">
                                @if (Model.detaildata != null)
                                {
                                    foreach (EmployeeLinkMaster details in Model.detaildata)
                                    {
                                        <tr class="item-row">
                                            <td class="hidden">
                                                <input class="form-control hide CATELID" id="CATELID" name="CATELID" value="@details.CATELID">
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(model => Model.detaildata[0].LCATEID, new SelectList(ViewBag.LCATEID, "value", "text", @details.LCATEID), new { @id = "LCATEID", @class = "form-control LCATEID", @onchange = "GetEmployeeDetail(this)" })
                                                <input class="form-control hide CATELNAME" id="CATELNAME" name="CATELNAME" value="@details.CATELNAME">
                                                <input class="form-control hide ACATEID" id="ACATEID" name="ACATEID" value="@details.LCATEID">
                                            </td>
                                            <td><a class="btn btn-danger btn-sm" id="sub_del_detail" onclick="del()"> <i class="fa fa-trash-o"></i></a></td>
                                        </tr>
                                    }
                                }
                                else
                                {

                                    <tr class="item-row">
                                        <td class="hidden">
                                            <input class="form-control hide CATELID" id="CATELID" name="CATELID" value="0">
                                        </td>
                                        <td>
                                            @*<input class="form-control CATELNAME" id="CATELNAME" name="CATELNAME" data-autocomplete-url="@Url.Action("AutoEmployeeMaster","EmployeeMaster")" placeholder="Select Employee Name" tabindex="101">*@
                                            @Html.DropDownList("LCATEID", null, "Select Employee", new { @id = "LCATEID", @class = "form-control LCATEID", @onchange = "GetEmployeeDetail(this)", tabindex = "101" })
                                            <input class="form-control hide CATELNAME" id="CATELNAME" name="CATELNAME" value="">
                                            <input class="form-control hide ACATEID" id="ACATEID" name="ACATEID" value="">
                                        </td>
                                        <td><a class="btn btn-danger btn-sm" id="sub_del_detail"> <i class="fa fa-trash-o"></i></a></td>
                                    </tr>

                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"> </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal" onclick="Cleardetail()">Close</button>
            <button type="button" class="btn btn-success" id="SaveClick">Save</button>
        </div>

        <div class="clearfix"> </div>

</form>

<div class="modal-body"><div class="te"></div></div>


<script>

    //$(document).ready(function () {
    //   //alert
    //    add_autocomplete_grid_drop($(".CATELNAME"), "CATELNAME,CATEID");
    //});

        $(function () {
            //-----date controls-------------
            $(".datepicker").datepicker({ dateFormat: 'dd-mm-yy', });

        });
        $(function () {
            var rowcount = $('#SUB_TDETAIL tbody tr').length;
          //  alert(rowcount);
            $("#SUB_TDETAIL_IDX").val(rowcount);
            $("#sub_add_detail").click(function () {
                if ($("#SUB_TDETAIL_IDX").val() != 0) {
                    var $tableBody = $('#SUB_TDETAIL').find("tbody"),
                    $trLast = $tableBody.find("tr:last");
                    $trNew = $trLast.clone();
                    $trLast.after($trNew);
                   // $trNew.find(".SIMDREFDESC").val("");
                    $trNew.find(".CATELNAME").val("");
                    $trNew.find(".ACATEID").val("0");
                    $trNew.find(".CATELID").val("0");

                    url = '@Url.Action("GetEmployeeMaster", "EmployeeMaster")/';

                    $trNew.find(".LCATEID").empty();

                    $.getJSON(url, function (data) {
                        var RQTY = 0; var BQTY = 0;
                        $trNew.find(".LCATEID").append("<option>Select Employee</option>");
                        $.each(data, function (key, val) {
                            $trNew.find(".LCATEID").append("<option value=" + val.CATEID + ">" + val.CATENAME + "</option>");
                            // RQTY = val.RQTY;
                            // RQTY = val.RQTY;
                        });

                        //ExecTMP();
                    });

                    var row_idx = parseInt($("#SUB_TDETAIL_IDX").val());
                    $("#SUB_TDETAIL_IDX").val(row_idx + 1);
                    $("#SUB_TDETAIL_BODY").show();
                }
                else {

                    $('#SUB_TDETAIL_IDX').val("1");
                    $("#SUB_TDETAIL_BODY").show();

                }
                return false;
            });



        });

        function add_autocomplete_grid_drop($obj, controls) {
            var oldFn = $.ui.autocomplete.prototype._renderItem;
            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp(this.term, "i");
                var t = item.label.replace(re, "<strong style='font-weight:bold;background:#C7DFFE;border-radius:2px;border:1px solid #98B8E1'>" + this.term + "</strong>");
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };
            var row_idx = $("#TDETAIL_IDX").val();




            $obj.autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url: $obj.data("autocomplete-url"),
                        type: "POST",
                        dataType: "json",
                        max: 10,
                        scrollable: true,
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                count = 0;
                                item_str = "";
                                var jsonArg = new Object();
                                count = 0;
                                $.each(item, function (i, data) {
                                    switch (count) {
                                        case 0:
                                            jsonArg.label = data;//+ " (" + item['ITEMPARTNO'] + "/" + item['ITEMDESC'] + ")";
                                            jsonArg.value = data;
                                            break;
                                        case 1:
                                            jsonArg.id = data;
                                            break;
                                        case 2:
                                            jsonArg.desc = data;
                                            break;
                                        case 3:
                                            jsonArg.xparam1 = data;
                                            break;
                                        case 4:
                                            jsonArg.xparam2 = data;
                                            break;
                                        case 5:
                                            jsonArg.xparam3 = data;
                                            break
                                        case 6:
                                            jsonArg.xparam4 = data;
                                            break
                                        case 7:
                                            jsonArg.xparam5 = data;
                                            break
                                        case 8:
                                            jsonArg.xparam6 = data;
                                            break
                                        case 9:
                                            jsonArg.xparam7 = data;
                                            break
                                        case 10:
                                            jsonArg.xparam8 = data;
                                            break
                                    }
                                    count++
                                });
                                return jsonArg
                            }))
                        }
                    })
                },
                search: function () {
                    var term = extractLast(this.value);
                    if (term.length < 1) {
                        return false
                    }
                },
                select: function (event, ui) {
                    var $tr = $obj.closest('tr');
                    var myRow = $tr.index();
                    $(this).val(ui.item.value);
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 1:
                                $("." + value)[myRow].value = ui.item.id;
                                //alert(ui.item.id + "--0");
                                break;
                            case 2:
                                $("." + value)[myRow].value = ui.item.desc;
                                //alert(ui.item.desc + "--1");
                                break;
                            case 3:
                                $("." + value)[myRow].value = ui.item.xparam1;
                                //alert(ui.item.xparam1 + "--2");
                                break;
                            case 4:
                                $("." + value)[myRow].value = ui.item.xparam2;
                                break;
                            case 5:
                                $("." + value)[myRow].value = ui.item.xparam3;
                                break
                            case 6:
                                $("." + value)[myRow].value = ui.item.xparam4;
                                //alert(ui.item.xparam4 + "--4");
                                break
                            case 7:
                                $("." + value)[myRow].value = ui.item.xparam5;
                                //alert(ui.item.xparam5 + "--5");
                                //this.input.attr("placeholder", 'Bitte wählen');
                                //$tr.find(".QTY").attr("placeholder", "Stock:" + '' + "");
                                // $tr.find(".QTY").attr("placeholder", "Stock:" + parseInt(data[0].MTRLSTKQTY) + "");
                                break
                            case 8:
                                $("." + value)[myRow].value = ui.item.xparam6;
                                //alert(ui.item.xparam6 + "--6");
                                break
                            case 9:
                                $("." + value)[myRow].value = ui.item.xparam7;
                                //alert(ui.item.xparam7 + "--7");
                                break
                            case 10:
                                $("." + value)[myRow].value = ui.item.xparam8;
                                //alert(ui.item.xparam8 + "--8");
                                break
                        }
                        count++
                    });



                    return false
                },
                messages: {
                    noResults: "",
                    results: ""
                }
            })
        }

        function GetEmployeeDetail(obj) {

            row = obj.parentNode.parentNode.rowIndex;
            row = row - 1;
            // alert("row" + row);
            var $tableBody = $('#SUB_TDETAIL').find("tbody")
            $trCur = $tableBody.find("tr:eq(" + row + ")");
            var catename = $trCur.find("#LCATEID option:selected").text();
            var acateid = $trCur.find("#LCATEID option:selected").val();
            $trCur.find(".CATELNAME").val(catename);
            $trCur.find(".ACATEID").val(acateid);

            //$("#add_detail").click();
            //$(".TRANDREFNO")[row].focus();
            //total();

            //buildSelect(obj)
        }



        $("#SaveClick").click(function () {
            var formdata = ($("#schedulefrm").serialize());
            var bad = 0;
            if ($(".F_VAL").val() == "") bad++;
            $('#SUB_TDETAIL :text,select').each(function () {

                switch (this.id) {
                    default:
                        if ($.trim(this.value) == "") { bad++; }
                }
            });

            if (bad < 1) {

                //return true;
                $.ajax({
                    type: 'post',
                    url: '@Url.Action("SForm_Savedata", "EMPLOYEEMASTER")', // we are calling json method
                    data: formdata,
                    success: function (data) {
                        if (data == "saved") {


                            $('.msg').html("Saved Successfully");
                            $('.msg').show();
                            $('.msg').delay(1200).fadeOut(1000);

                            $('#myModal').modal('hide');
                            location.reload();
                        }

                    },
                    error: function (ex) {
                        alert('Failed to save data ' + ex);
                    }
                });

            }
            else {
                alert("Please Select Employee before save");
                return false;
            }


        });


        $("#schedulefrm").on("click", "#sub_del_detail", function () {
            var r = confirm("Are you sure to delete this record ?");
            if (r == true) {
                idx = $("#SUB_TDETAIL_IDX").val();
                if (idx == 1) {

                    var $tableBody = $('#SUB_TDETAIL').find("tbody")
                    $trCur = $tableBody.find("tr:eq(0)");
                    //$trCur.find(".STUDENT_IAMT").val("");
                    $trCur.find(".CATELID").val("-1");

                }
                else {
                    $("#SUB_TDETAIL_BODY").show();
                    var row = this.parentNode.parentNode;
                    $(this).parents('.item-row').remove();
                    $("#SUB_TDETAIL_IDX").val($("#SUB_TDETAIL_IDX").val() - 1);

                }
            }
        });

        function Cleardetail() {

            location.reload();


        }


        function validate() {
            //if ($(".TRANREFID").val() == "") {
            //    alert("Please Select Supplier");
            //    $(".TRANREFNAME").val("");
            //    $(".TRANREFNAME").focus();
            //    return false;
            //}
            var bad = 0;
            $('#SUB_TDETAIL :text,#SUB_TDETAIL select').each(function () {

                switch (this.id) {
                    default:
                        if ($.trim(this.value) == "") bad++;
                }
            });

            if (bad < 1) {

                return true;

            }
            else {
                alert("Please Select Employee before save");
                return false;
            }
        }


</script>


